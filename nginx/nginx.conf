events {
    worker_connections 1024;
}
http {
  # http configuration
  server {
    listen 80;
    listen [::]:80;
    
    server_name matthewvarga.net www.matthewvarga.net matthew-varga.com www.matthew-varga.com;

    # letsencrypt ssl challenge file locations
    location ~ /.well-known/acme-challenge {
      allow all;
      root /var/www;
    }

    # redirect all other traffic to https
    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }
  }

  # matthewvarga.net / matthew-varga.com https configuration
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name matthewvarga.net www.matthewvarga.net matthew-varga.com www.matthew-varga.com;

    server_tokens off;

    # ssl cert locations
    ssl_certificate /etc/letsencrypt/live/matthewvarga.net-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/matthewvarga.net-0002/privkey.pem;

    ssl_buffer_size 8k;

    # Diffie-Helman credentials and key location
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # point requests to aliased matthewvarga container
    location / {
      try_files $uri @matthewvarga;
    }

    # server matthewvara container, and add additional security headers
    location @matthewvarga {
      proxy_pass http://matthewvarga:8080;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
      # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      # enable strict transport security only if you understand the implications
    }

    root /var/www;
  }

  # tftbuild.co https configuration
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name dev.matthewvarga.net www.dev.matthewvarga.net dev.matthew-varga.com www.dev.matthew-varga.com;

    server_tokens off;

    # ssl cert locations
    ssl_certificate /etc/letsencrypt/live/matthewvarga.net-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/matthewvarga.net-0002/privkey.pem;

    ssl_buffer_size 8k;

    # Diffie-Helman credentials and key location
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;

    ssl_ciphers ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # point requests to aliased matthewvarga container
    location / {
      try_files $uri @tftbuild;
    }

    # server matthewvara container, and add additional security headers
    location @tftbuild {
      proxy_pass http://tftbuild:8080;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
      # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      # enable strict transport security only if you understand the implications
    }

    root /var/www;
  }
}

